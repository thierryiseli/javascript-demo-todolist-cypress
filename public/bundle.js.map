{"version":3,"file":"bundle.js","sources":["../node_modules/lit-element/node_modules/lit-html/lib/dom.js","../node_modules/lit-element/node_modules/lit-html/lib/template.js","../node_modules/lit-element/node_modules/lit-html/lib/modify-template.js","../node_modules/lit-element/node_modules/lit-html/lib/directive.js","../node_modules/lit-element/node_modules/lit-html/lib/part.js","../node_modules/lit-element/node_modules/lit-html/lib/template-instance.js","../node_modules/lit-element/node_modules/lit-html/lib/template-result.js","../node_modules/lit-element/node_modules/lit-html/lib/parts.js","../node_modules/lit-element/node_modules/lit-html/lib/template-factory.js","../node_modules/lit-element/node_modules/lit-html/lib/render.js","../node_modules/lit-element/node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-element/node_modules/lit-html/lit-html.js","../node_modules/lit-element/node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../src/views/home/HomeView.js","../src/views/about/AboutView.js","../node_modules/@vaadin/router/dist/vaadin-router.js","../src/views/header/HeaderView.js","../src/app.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                // Type assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     * @deprecated Override `getUpdateComplete()` instead for forward\n     *     compatibility with `lit-element` 3.0 / `@lit/reactive-element`.\n     */\n    _getUpdateComplete() {\n        return this.getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async getUpdateComplete() {\n     *       await super.getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport { UpdatingElement as ReactiveElement } from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.5.1');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow(this.constructor.shadowRootOptions);\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n/** @nocollapse */\nLitElement.shadowRootOptions = { mode: 'open' };\n//# sourceMappingURL=lit-element.js.map","import { LitElement, html, css } from \"lit-element\";\n\nclass HomeView extends LitElement {\n    static get styles() {\n        return css`\n            .title {\n                font-size: 30px;\n                text-decoration: underline;\n            }\n        `;\n    }\n\n    render() {\n        return html`\n            <h1 class=\"title\">\n                Todolist works!\n            </h1>\n        `;\n    }\n}\n\ncustomElements.define('home-view', HomeView);","import { LitElement, html, css } from \"lit-element\";\n\nclass AboutView extends LitElement {\n    static get styles() {\n        return css`\n            .title {\n                font-size: 30px;\n                text-decoration: underline;\n            }\n        `;\n    }\n\n    render() {\n        return html`\n            <h1 class=\"title\">\n                About\n            </h1>\n        `;\n    }\n}\n\ncustomElements.define('about-view', AboutView);","function toArray(objectOrArray) {\n  objectOrArray = objectOrArray || [];\n  return Array.isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n}\n\nfunction log(msg) {\n  return `[Vaadin.Router] ${msg}`;\n}\n\nfunction logValue(value) {\n  if (typeof value !== 'object') {\n    return String(value);\n  }\n\n  const stringType = Object.prototype.toString.call(value).match(/ (.*)\\]$/)[1];\n  if (stringType === 'Object' || stringType === 'Array') {\n    return `${stringType} ${JSON.stringify(value)}`;\n  } else {\n    return stringType;\n  }\n}\n\nconst MODULE = 'module';\nconst NOMODULE = 'nomodule';\nconst bundleKeys = [MODULE, NOMODULE];\n\nfunction ensureBundle(src) {\n  if (!src.match(/.+\\.[m]?js$/)) {\n    throw new Error(\n      log(`Unsupported type for bundle \"${src}\": .js or .mjs expected.`)\n    );\n  }\n}\n\nfunction ensureRoute(route) {\n  if (!route || !isString(route.path)) {\n    throw new Error(\n      log(`Expected route config to be an object with a \"path\" string property, or an array of such objects`)\n    );\n  }\n\n  const bundle = route.bundle;\n\n  const stringKeys = ['component', 'redirect', 'bundle'];\n  if (\n    !isFunction(route.action) &&\n    !Array.isArray(route.children) &&\n    !isFunction(route.children) &&\n    !isObject(bundle) &&\n    !stringKeys.some(key => isString(route[key]))\n  ) {\n    throw new Error(\n      log(\n        `Expected route config \"${route.path}\" to include either \"${stringKeys.join('\", \"')}\" ` +\n        `or \"action\" function but none found.`\n      )\n    );\n  }\n\n  if (bundle) {\n    if (isString(bundle)) {\n      ensureBundle(bundle);\n    } else if (!bundleKeys.some(key => key in bundle)) {\n      throw new Error(\n        log('Expected route bundle to include either \"' + NOMODULE + '\" or \"' + MODULE + '\" keys, or both')\n      );\n    } else {\n      bundleKeys.forEach(key => key in bundle && ensureBundle(bundle[key]));\n    }\n  }\n\n  if (route.redirect) {\n    ['bundle', 'component'].forEach(overriddenProp => {\n      if (overriddenProp in route) {\n        console.warn(\n          log(\n            `Route config \"${route.path}\" has both \"redirect\" and \"${overriddenProp}\" properties, ` +\n            `and \"redirect\" will always override the latter. Did you mean to only use \"${overriddenProp}\"?`\n          )\n        );\n      }\n    });\n  }\n}\n\nfunction ensureRoutes(routes) {\n  toArray(routes).forEach(route => ensureRoute(route));\n}\n\nfunction loadScript(src, key) {\n  let script = document.head.querySelector('script[src=\"' + src + '\"][async]');\n  if (!script) {\n    script = document.createElement('script');\n    script.setAttribute('src', src);\n    if (key === MODULE) {\n      script.setAttribute('type', MODULE);\n    } else if (key === NOMODULE) {\n      script.setAttribute(NOMODULE, '');\n    }\n    script.async = true;\n  }\n  return new Promise((resolve, reject) => {\n    script.onreadystatechange = script.onload = e => {\n      script.__dynamicImportLoaded = true;\n      resolve(e);\n    };\n    script.onerror = e => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      reject(e);\n    };\n    if (script.parentNode === null) {\n      document.head.appendChild(script);\n    } else if (script.__dynamicImportLoaded) {\n      resolve();\n    }\n  });\n}\n\nfunction loadBundle(bundle) {\n  if (isString(bundle)) {\n    return loadScript(bundle);\n  } else {\n    return Promise.race(\n      bundleKeys\n        .filter(key => key in bundle)\n        .map(key => loadScript(bundle[key], key))\n    );\n  }\n}\n\nfunction fireRouterEvent(type, detail) {\n  return !window.dispatchEvent(new CustomEvent(\n    `vaadin-router-${type}`,\n    {cancelable: type === 'go', detail}\n  ));\n}\n\nfunction isObject(o) {\n  // guard against null passing the typeof check\n  return typeof o === 'object' && !!o;\n}\n\nfunction isFunction(f) {\n  return typeof f === 'function';\n}\n\nfunction isString(s) {\n  return typeof s === 'string';\n}\n\nfunction getNotFoundError(context) {\n  const error = new Error(log(`Page not found (${context.pathname})`));\n  error.context = context;\n  error.code = 404;\n  return error;\n}\n\nconst notFoundResult = new (class NotFoundResult {})();\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nfunction getAnchorOrigin(anchor) {\n  // IE11: on HTTP and HTTPS the default port is not included into\n  // window.location.origin, so won't include it here either.\n  const port = anchor.port;\n  const protocol = anchor.protocol;\n  const defaultHttp = protocol === 'http:' && port === '80';\n  const defaultHttps = protocol === 'https:' && port === '443';\n  const host = (defaultHttp || defaultHttps)\n    ? anchor.hostname // does not include the port number (e.g. www.example.org)\n    : anchor.host; // does include the port number (e.g. www.example.org:80)\n  return `${protocol}//${host}`;\n}\n\n// The list of checks is not complete:\n//  - SVG support is missing\n//  - the 'rel' attribute is not considered\nfunction vaadinRouterGlobalClickHandler(event) {\n  // ignore the click if the default action is prevented\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  // ignore the click if not with the primary mouse button\n  if (event.button !== 0) {\n    return;\n  }\n\n  // ignore the click if a modifier key is pressed\n  if (event.shiftKey || event.ctrlKey || event.altKey || event.metaKey) {\n    return;\n  }\n\n  // find the <a> element that the click is at (or within)\n  let anchor = event.target;\n  const path = event.composedPath\n    ? event.composedPath()\n    : (event.path || []);\n\n  // FIXME(web-padawan): `Symbol.iterator` used by webcomponentsjs is broken for arrays\n  // example to check: `for...of` loop here throws the \"Not yet implemented\" error\n  for (let i = 0; i < path.length; i++) {\n    const target = path[i];\n    if (target.nodeName && target.nodeName.toLowerCase() === 'a') {\n      anchor = target;\n      break;\n    }\n  }\n\n  while (anchor && anchor.nodeName.toLowerCase() !== 'a') {\n    anchor = anchor.parentNode;\n  }\n\n  // ignore the click if not at an <a> element\n  if (!anchor || anchor.nodeName.toLowerCase() !== 'a') {\n    return;\n  }\n\n  // ignore the click if the <a> element has a non-default target\n  if (anchor.target && anchor.target.toLowerCase() !== '_self') {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'download' attribute\n  if (anchor.hasAttribute('download')) {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'router-ignore' attribute\n  if (anchor.hasAttribute('router-ignore')) {\n    return;\n  }\n\n  // ignore the click if the target URL is a fragment on the current page\n  if (anchor.pathname === window.location.pathname && anchor.hash !== '') {\n    return;\n  }\n\n  // ignore the click if the target is external to the app\n  // In IE11 HTMLAnchorElement does not have the `origin` property\n  const origin = anchor.origin || getAnchorOrigin(anchor);\n  if (origin !== window.location.origin) {\n    return;\n  }\n\n  // if none of the above, convert the click into a navigation event\n  const {pathname, search, hash} = anchor;\n  if (fireRouterEvent('go', {pathname, search, hash})) {\n    event.preventDefault();\n    // for a click event, the scroll is reset to the top position.\n    if (event && event.type === 'click') {\n      window.scrollTo(0, 0);\n    }\n  }\n}\n\n/**\n * A navigation trigger for Vaadin Router that translated clicks on `<a>` links\n * into Vaadin Router navigation events.\n *\n * Only regular clicks on in-app links are translated (primary mouse button, no\n * modifier keys, the target href is within the app's URL space).\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst CLICK = {\n  activate() {\n    window.document.addEventListener('click', vaadinRouterGlobalClickHandler);\n  },\n\n  inactivate() {\n    window.document.removeEventListener('click', vaadinRouterGlobalClickHandler);\n  }\n};\n\n// PopStateEvent constructor shim\nconst isIE = /Trident/.test(navigator.userAgent);\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nif (isIE && !isFunction(window.PopStateEvent)) {\n  window.PopStateEvent = function(inType, params) {\n    params = params || {};\n    var e = document.createEvent('Event');\n    e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n    e.state = params.state || null;\n    return e;\n  };\n  window.PopStateEvent.prototype = window.Event.prototype;\n}\n\nfunction vaadinRouterGlobalPopstateHandler(event) {\n  if (event.state === 'vaadin-router-ignore') {\n    return;\n  }\n  const {pathname, search, hash} = window.location;\n  fireRouterEvent('go', {pathname, search, hash});\n}\n\n/**\n * A navigation trigger for Vaadin Router that translates popstate events into\n * Vaadin Router navigation events.\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst POPSTATE = {\n  activate() {\n    window.addEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  },\n\n  inactivate() {\n    window.removeEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  }\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/';\nvar DEFAULT_DELIMITERS = './';\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER;\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS;\n  var pathEscaped = false;\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      pathEscaped = true;\n      continue\n    }\n\n    var prev = '';\n    var next = str[index];\n    var name = res[2];\n    var capture = res[3];\n    var group = res[4];\n    var modifier = res[5];\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1;\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k];\n        path = path.slice(0, k);\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n      pathEscaped = false;\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = prev || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    });\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index));\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (data, options) {\n    var path = '';\n    var encode = (options && options.encode) || encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined;\n      var segment;\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token);\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment;\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix;\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      });\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {};\n\n  var strict = options.strict;\n  var start = options.start !== false;\n  var end = options.end !== false;\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER);\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS;\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|');\n  var route = start ? '^' : '';\n  var isEndDelimited = tokens.length === 0;\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1;\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern;\n\n      if (keys) keys.push(token);\n\n      if (token.optional) {\n        if (token.partial) {\n          route += escapeString(token.prefix) + '(' + capture + ')?';\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?';\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')';\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?';\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')';\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?';\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')';\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nconst {hasOwnProperty} = Object.prototype;\nconst cache = new Map();\n// see https://github.com/pillarjs/path-to-regexp/issues/148\ncache.set('|false', {\n  keys: [],\n  pattern: /(?:)/\n});\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nfunction matchPath(routepath, path, exact, parentKeys, parentParams) {\n  exact = !!exact;\n  const cacheKey = `${routepath}|${exact}`;\n  let regexp = cache.get(cacheKey);\n\n  if (!regexp) {\n    const keys = [];\n    regexp = {\n      keys,\n      pattern: pathToRegexp_1(routepath, keys, {\n        end: exact,\n        strict: routepath === ''\n      }),\n    };\n    cache.set(cacheKey, regexp);\n  }\n\n  const m = regexp.pattern.exec(path);\n  if (!m) {\n    return null;\n  }\n\n  const params = Object.assign({}, parentParams);\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1];\n    const prop = key.name;\n    const value = m[i];\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : [];\n      } else {\n        params[prop] = value ? decodeParam(value) : value;\n      }\n    }\n  }\n\n  return {\n    path: m[0],\n    keys: (parentKeys || []).concat(regexp.keys),\n    params,\n  };\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/**\n * Traverses the routes tree and matches its nodes to the given pathname from\n * the root down to the leaves. Each match consumes a part of the pathname and\n * the matching process continues for as long as there is a matching child\n * route for the remaining part of the pathname.\n *\n * The returned value is a lazily evaluated iterator.\n *\n * The leading \"/\" in a route path matters only for the root of the routes\n * tree (or if all parent routes are \"\"). In all other cases a leading \"/\" in\n * a child route path has no significance.\n *\n * The trailing \"/\" in a _route path_ matters only for the leaves of the\n * routes tree. A leaf route with a trailing \"/\" matches only a pathname that\n * also has a trailing \"/\".\n *\n * The trailing \"/\" in a route path does not affect matching of child routes\n * in any way.\n *\n * The trailing \"/\" in a _pathname_ generally does not matter (except for\n * the case of leaf nodes described above).\n *\n * The \"\" and \"/\" routes have special treatment:\n *  1. as a single route\n *     the \"\" and \"/\" routes match only the \"\" and \"/\" pathnames respectively\n *  2. as a parent in the routes tree\n *     the \"\" route matches any pathname without consuming any part of it\n *     the \"/\" route matches any absolute pathname consuming its leading \"/\"\n *  3. as a leaf in the routes tree\n *     the \"\" and \"/\" routes match only if the entire pathname is consumed by\n *         the parent routes chain. In this case \"\" and \"/\" are equivalent.\n *  4. several directly nested \"\" or \"/\" routes\n *     - directly nested \"\" or \"/\" routes are 'squashed' (i.e. nesting two\n *       \"/\" routes does not require a double \"/\" in the pathname to match)\n *     - if there are only \"\" in the parent routes chain, no part of the\n *       pathname is consumed, and the leading \"/\" in the child routes' paths\n *       remains significant\n *\n * Side effect:\n *   - the routes tree { path: '' } matches only the '' pathname\n *   - the routes tree { path: '', children: [ { path: '' } ] } matches any\n *     pathname (for the tree root)\n *\n * Prefix matching can be enabled also by `children: true`.\n */\nfunction matchRoute(route, pathname, ignoreLeadingSlash, parentKeys, parentParams) {\n  let match;\n  let childMatches;\n  let childIndex = 0;\n  let routepath = route.path || '';\n  if (routepath.charAt(0) === '/') {\n    if (ignoreLeadingSlash) {\n      routepath = routepath.substr(1);\n    }\n    ignoreLeadingSlash = true;\n  }\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return {done: true};\n      }\n\n      const children = route.__children = route.__children || route.children;\n\n      if (!match) {\n        match = matchPath(routepath, pathname, !children, parentKeys, parentParams);\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              keys: match.keys,\n              params: match.params,\n              path: match.path\n            },\n          };\n        }\n      }\n\n      if (match && children) {\n        while (childIndex < children.length) {\n          if (!childMatches) {\n            const childRoute = children[childIndex];\n            childRoute.parent = route;\n\n            let matchedLength = match.path.length;\n            if (matchedLength > 0 && pathname.charAt(matchedLength) === '/') {\n              matchedLength += 1;\n            }\n\n            childMatches = matchRoute(\n              childRoute,\n              pathname.substr(matchedLength),\n              ignoreLeadingSlash,\n              match.keys,\n              match.params\n            );\n          }\n\n          const childMatch = childMatches.next(routeToSkip);\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            };\n          }\n\n          childMatches = null;\n          childIndex++;\n        }\n      }\n\n      return {done: true};\n    },\n  };\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction resolveRoute(context) {\n  if (isFunction(context.route.action)) {\n    return context.route.action(context);\n  }\n  return undefined;\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute;\n  while (route) {\n    route = route.parent;\n    if (route === parentRoute) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction generateErrorMessage(currentContext) {\n  let errorMessage = `Path '${currentContext.pathname}' is not properly resolved due to an error.`;\n  const routePath = (currentContext.route || {}).path;\n  if (routePath) {\n    errorMessage += ` Resolution had failed on route: '${routePath}'`;\n  }\n  return errorMessage;\n}\n\nfunction updateChainForRoute(context, match) {\n  const {route, path} = match;\n\n  if (route && !route.__synthetic) {\n    const item = {path, route};\n    if (!context.chain) {\n      context.chain = [];\n    } else {\n      // Discard old items\n      if (route.parent) {\n        let i = context.chain.length;\n        while (i-- && context.chain[i].route && context.chain[i].route !== route.parent) {\n          context.chain.pop();\n        }\n      }\n    }\n    context.chain.push(item);\n  }\n}\n\n/**\n */\nclass Resolver {\n  constructor(routes, options = {}) {\n    if (Object(routes) !== routes) {\n      throw new TypeError('Invalid routes');\n    }\n\n    this.baseUrl = options.baseUrl || '';\n    this.errorHandler = options.errorHandler;\n    this.resolveRoute = options.resolveRoute || resolveRoute;\n    this.context = Object.assign({resolver: this}, options.context);\n    this.root = Array.isArray(routes) ? {path: '', __children: routes, parent: null, __synthetic: true} : routes;\n    this.root.parent = null;\n  }\n\n  /**\n   * Returns the current list of routes (as a shallow copy). Adding / removing\n   * routes to / from the returned array does not affect the routing config,\n   * but modifying the route objects does.\n   *\n   * @return {!Array<!Router.Route>}\n   */\n  getRoutes() {\n    return [...this.root.__children];\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one).\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   */\n  setRoutes(routes) {\n    ensureRoutes(routes);\n    const newRoutes = [...toArray(routes)];\n    this.root.__children = newRoutes;\n  }\n\n  /**\n   * Appends one or several routes to the routing config and returns the\n   * effective routing config after the operation.\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   * @return {!Array<!Router.Route>}\n   * @protected\n   */\n  addRoutes(routes) {\n    ensureRoutes(routes);\n    this.root.__children.push(...toArray(routes));\n    return this.getRoutes();\n  }\n\n  /**\n   * Removes all existing routes from the routing config.\n   */\n  removeRoutes() {\n    this.setRoutes([]);\n  }\n\n  /**\n   * Asynchronously resolves the given pathname, i.e. finds all routes matching\n   * the pathname and tries resolving them one after another in the order they\n   * are listed in the routes config until the first non-null result.\n   *\n   * Returns a promise that is fulfilled with the return value of an object that consists of the first\n   * route handler result that returns something other than `null` or `undefined` and context used to get this result.\n   *\n   * If no route handlers return a non-null result, or if no route matches the\n   * given pathname the returned promise is rejected with a 'page not found'\n   * `Error`.\n   *\n   * @param {!string|!{pathname: !string}} pathnameOrContext the pathname to\n   *    resolve or a context object with a `pathname` property and other\n   *    properties to pass to the route resolver functions.\n   * @return {!Promise<any>}\n   */\n  resolve(pathnameOrContext) {\n    const context = Object.assign(\n      {},\n      this.context,\n      isString(pathnameOrContext) ? {pathname: pathnameOrContext} : pathnameOrContext\n    );\n    const match = matchRoute(\n      this.root,\n      this.__normalizePathname(context.pathname),\n      this.baseUrl\n    );\n    const resolve = this.resolveRoute;\n    let matches = null;\n    let nextMatches = null;\n    let currentContext = context;\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route;\n      matches = nextMatches || match.next(routeToSkip);\n      nextMatches = null;\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches;\n          return Promise.resolve(notFoundResult);\n        }\n      }\n\n      if (matches.done) {\n        return Promise.reject(getNotFoundError(context));\n      }\n\n      currentContext = Object.assign(\n        currentContext\n          ? {chain: (currentContext.chain ? currentContext.chain.slice(0) : [])}\n          : {},\n        context,\n        matches.value\n      );\n      updateChainForRoute(currentContext, matches.value);\n\n      return Promise.resolve(resolve(currentContext)).then(resolution => {\n        if (resolution !== null && resolution !== undefined && resolution !== notFoundResult) {\n          currentContext.result = resolution.result || resolution;\n          return currentContext;\n        }\n        return next(resume, parent, resolution);\n      });\n    }\n\n    context.next = next;\n\n    return Promise.resolve()\n      .then(() => next(true, this.root))\n      .catch((error) => {\n        const errorMessage = generateErrorMessage(currentContext);\n        if (!error) {\n          error = new Error(errorMessage);\n        } else {\n          console.warn(errorMessage);\n        }\n        error.context = error.context || currentContext;\n        // DOMException has its own code which is read-only\n        if (!(error instanceof DOMException)) {\n          error.code = error.code || 500;\n        }\n        if (this.errorHandler) {\n          currentContext.result = this.errorHandler(error);\n          return currentContext;\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * URL constructor polyfill hook. Creates and returns an URL instance.\n   */\n  static __createUrl(url, base) {\n    return new URL(url, base);\n  }\n\n  /**\n   * If the baseUrl property is set, transforms the baseUrl and returns the full\n   * actual `base` string for using in the `new URL(path, base);` and for\n   * prepernding the paths with. The returned base ends with a trailing slash.\n   *\n   * Otherwise, returns empty string.\n   */\n  get __effectiveBaseUrl() {\n    return this.baseUrl\n      ? this.constructor.__createUrl(\n        this.baseUrl,\n        document.baseURI || document.URL\n      ).href.replace(/[^\\/]*$/, '')\n      : '';\n  }\n\n  /**\n   * If the baseUrl is set, matches the pathname with the router’s baseUrl,\n   * and returns the local pathname with the baseUrl stripped out.\n   *\n   * If the pathname does not match the baseUrl, returns undefined.\n   *\n   * If the `baseUrl` is not set, returns the unmodified pathname argument.\n   */\n  __normalizePathname(pathname) {\n    if (!this.baseUrl) {\n      // No base URL, no need to transform the pathname.\n      return pathname;\n    }\n\n    const base = this.__effectiveBaseUrl;\n    const normalizedUrl = this.constructor.__createUrl(pathname, base).href;\n    if (normalizedUrl.slice(0, base.length) === base) {\n      return normalizedUrl.slice(base.length);\n    }\n  }\n}\n\nResolver.pathToRegexp = pathToRegexp_1;\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nconst {pathToRegexp: pathToRegexp$1} = Resolver;\nconst cache$1 = new Map();\n\nfunction cacheRoutes(routesByName, route, routes) {\n  const name = route.name || route.component;\n  if (name) {\n    if (routesByName.has(name)) {\n      routesByName.get(name).push(route);\n    } else {\n      routesByName.set(name, [route]);\n    }\n  }\n\n  if (Array.isArray(routes)) {\n    for (let i = 0; i < routes.length; i++) {\n      const childRoute = routes[i];\n      childRoute.parent = route;\n      cacheRoutes(routesByName, childRoute, childRoute.__children || childRoute.children);\n    }\n  }\n}\n\nfunction getRouteByName(routesByName, routeName) {\n  const routes = routesByName.get(routeName);\n  if (routes && routes.length > 1) {\n    throw new Error(\n      `Duplicate route with name \"${routeName}\".`\n      + ` Try seting unique 'name' route properties.`\n    );\n  }\n  return routes && routes[0];\n}\n\nfunction getRoutePath(route) {\n  let path = route.path;\n  path = Array.isArray(path) ? path[0] : path;\n  return path !== undefined ? path : '';\n}\n\nfunction generateUrls(router, options = {}) {\n  if (!(router instanceof Resolver)) {\n    throw new TypeError('An instance of Resolver is expected');\n  }\n\n  const routesByName = new Map();\n\n  return (routeName, params) => {\n    let route = getRouteByName(routesByName, routeName);\n    if (!route) {\n      routesByName.clear(); // clear cache\n      cacheRoutes(routesByName, router.root, router.root.__children);\n\n      route = getRouteByName(routesByName, routeName);\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`);\n      }\n    }\n\n    let regexp = cache$1.get(route.fullPath);\n    if (!regexp) {\n      let fullPath = getRoutePath(route);\n      let rt = route.parent;\n      while (rt) {\n        const path = getRoutePath(rt);\n        if (path) {\n          fullPath = path.replace(/\\/$/, '') + '/' + fullPath.replace(/^\\//, '');\n        }\n        rt = rt.parent;\n      }\n      const tokens = pathToRegexp$1.parse(fullPath);\n      const toPath = pathToRegexp$1.tokensToFunction(tokens);\n      const keys = Object.create(null);\n      for (let i = 0; i < tokens.length; i++) {\n        if (!isString(tokens[i])) {\n          keys[tokens[i].name] = true;\n        }\n      }\n      regexp = {toPath, keys};\n      cache$1.set(fullPath, regexp);\n      route.fullPath = fullPath;\n    }\n\n    let url = regexp.toPath(params, options) || '/';\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams = {};\n      const keys = Object.keys(params);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key];\n        }\n      }\n      const query = options.stringifyQueryParams(queryParams);\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`;\n      }\n    }\n\n    return url;\n  };\n}\n\n/**\n * @typedef NavigationTrigger\n * @type {object}\n * @property {function()} activate\n * @property {function()} inactivate\n */\n\n/** @type {Array<NavigationTrigger>} */\nlet triggers = [];\n\nfunction setNavigationTriggers(newTriggers) {\n  triggers.forEach(trigger => trigger.inactivate());\n\n  newTriggers.forEach(trigger => trigger.activate());\n\n  triggers = newTriggers;\n}\n\nconst willAnimate = elem => {\n  const name = getComputedStyle(elem).getPropertyValue('animation-name');\n  return name && name !== 'none';\n};\n\nconst waitForAnimation = (elem, cb) => {\n  const listener = () => {\n    elem.removeEventListener('animationend', listener);\n    cb();\n  };\n  elem.addEventListener('animationend', listener);\n};\n\nfunction animate(elem, className) {\n  elem.classList.add(className);\n\n  return new Promise(resolve => {\n    if (willAnimate(elem)) {\n      const rect = elem.getBoundingClientRect();\n      const size = `height: ${rect.bottom - rect.top}px; width: ${rect.right - rect.left}px`;\n      elem.setAttribute('style', `position: absolute; ${size}`);\n      waitForAnimation(elem, () => {\n        elem.classList.remove(className);\n        elem.removeAttribute('style');\n        resolve();\n      });\n    } else {\n      elem.classList.remove(className);\n      resolve();\n    }\n  });\n}\n\nconst MAX_REDIRECT_COUNT = 256;\n\nfunction isResultNotEmpty(result) {\n  return result !== null && result !== undefined;\n}\n\nfunction copyContextWithoutNext(context) {\n  const copy = Object.assign({}, context);\n  delete copy.next;\n  return copy;\n}\n\nfunction createLocation({pathname = '', search = '', hash = '', chain = [], params = {}, redirectFrom, resolver}, route) {\n  const routes = chain.map(item => item.route);\n  return {\n    baseUrl: resolver && resolver.baseUrl || '',\n    pathname,\n    search,\n    hash,\n    routes,\n    route: route || routes.length && routes[routes.length - 1] || null,\n    params,\n    redirectFrom,\n    getUrl: (userParams = {}) => getPathnameForRouter(\n      Router.pathToRegexp.compile(\n        getMatchedPath(routes)\n      )(Object.assign({}, params, userParams)),\n      resolver\n    )\n  };\n}\n\nfunction createRedirect(context, pathname) {\n  const params = Object.assign({}, context.params);\n  return {\n    redirect: {\n      pathname,\n      from: context.pathname,\n      params\n    }\n  };\n}\n\nfunction renderElement(context, element) {\n  element.location = createLocation(context);\n  const index = context.chain.map(item => item.route).indexOf(context.route);\n  context.chain[index].element = element;\n  return element;\n}\n\nfunction runCallbackIfPossible(callback, args, thisArg) {\n  if (isFunction(callback)) {\n    return callback.apply(thisArg, args);\n  }\n}\n\nfunction amend(amendmentFunction, args, element) {\n  return amendmentResult => {\n    if (amendmentResult && (amendmentResult.cancel || amendmentResult.redirect)) {\n      return amendmentResult;\n    }\n\n    if (element) {\n      return runCallbackIfPossible(element[amendmentFunction], args, element);\n    }\n  };\n}\n\nfunction processNewChildren(newChildren, route) {\n  if (!Array.isArray(newChildren) && !isObject(newChildren)) {\n    throw new Error(\n      log(\n        `Incorrect \"children\" value for the route ${route.path}: expected array or object, but got ${newChildren}`\n      )\n    );\n  }\n\n  route.__children = [];\n  const childRoutes = toArray(newChildren);\n  for (let i = 0; i < childRoutes.length; i++) {\n    ensureRoute(childRoutes[i]);\n    route.__children.push(childRoutes[i]);\n  }\n}\n\nfunction removeDomNodes(nodes) {\n  if (nodes && nodes.length) {\n    const parent = nodes[0].parentNode;\n    for (let i = 0; i < nodes.length; i++) {\n      parent.removeChild(nodes[i]);\n    }\n  }\n}\n\nfunction getPathnameForRouter(pathname, router) {\n  const base = router.__effectiveBaseUrl;\n  return base\n    ? router.constructor.__createUrl(pathname.replace(/^\\//, ''), base).pathname\n    : pathname;\n}\n\nfunction getMatchedPath(chain) {\n  return chain.map(item => item.path).reduce((a, b) => {\n    if (b.length) {\n      return a.replace(/\\/$/, '') + '/' + b.replace(/^\\//, '');\n    }\n    return a;\n  }, '');\n}\n\n/**\n * A simple client-side router for single-page applications. It uses\n * express-style middleware and has a first-class support for Web Components and\n * lazy-loading. Works great in Polymer and non-Polymer apps.\n *\n * Use `new Router(outlet, options)` to create a new Router instance.\n *\n * * The `outlet` parameter is a reference to the DOM node to render\n *   the content into.\n *\n * * The `options` parameter is an optional object with options. The following\n *   keys are supported:\n *   * `baseUrl` — the initial value for [\n *     the `baseUrl` property\n *   ](#/classes/Router#property-baseUrl)\n *\n * The Router instance is automatically subscribed to navigation events\n * on `window`.\n *\n * See [Live Examples](#/classes/Router/demos/demo/index.html) for the detailed usage demo and code snippets.\n *\n * See also detailed API docs for the following methods, for the advanced usage:\n *\n * * [setOutlet](#/classes/Router#method-setOutlet) – should be used to configure the outlet.\n * * [setTriggers](#/classes/Router#method-setTriggers) – should be used to configure the navigation events.\n * * [setRoutes](#/classes/Router#method-setRoutes) – should be used to configure the routes.\n *\n * Only `setRoutes` has to be called manually, others are automatically invoked when creating a new instance.\n *\n * @extends Resolver\n * @demo demo/index.html\n * @summary JavaScript class that renders different DOM content depending on\n *    a given path. It can re-render when triggered or automatically on\n *    'popstate' and / or 'click' events.\n */\nclass Router extends Resolver {\n\n  /**\n   * Creates a new Router instance with a given outlet, and\n   * automatically subscribes it to navigation events on the `window`.\n   * Using a constructor argument or a setter for outlet is equivalent:\n   *\n   * ```\n   * const router = new Router();\n   * router.setOutlet(outlet);\n   * ```\n   * @param {?Node=} outlet\n   * @param {?RouterOptions=} options\n   */\n  constructor(outlet, options) {\n    const baseElement = document.head.querySelector('base');\n    const baseHref = baseElement && baseElement.getAttribute('href');\n    super([], Object.assign({\n      // Default options\n      baseUrl: baseHref && Resolver.__createUrl(baseHref, document.URL).pathname.replace(/[^\\/]*$/, '')\n    }, options));\n\n    this.resolveRoute = context => this.__resolveRoute(context);\n\n    const triggers = Router.NavigationTrigger;\n    Router.setTriggers.apply(Router, Object.keys(triggers).map(key => triggers[key]));\n\n    /**\n     * The base URL for all routes in the router instance. By default,\n     * if the base element exists in the `<head>`, vaadin-router\n     * takes the `<base href>` attribute value, resolves against current `document.URL`\n     * and gets the `pathname` from the result.\n     *\n     * @public\n     * @type {string}\n     */\n    this.baseUrl;\n\n    /**\n     * A promise that is settled after the current render cycle completes. If\n     * there is no render cycle in progress the promise is immediately settled\n     * with the last render cycle result.\n     *\n     * @public\n     * @type {!Promise<!RouterLocation>}\n     */\n    this.ready;\n    this.ready = Promise.resolve(outlet);\n\n    /**\n     * Contains read-only information about the current router location:\n     * pathname, active routes, parameters. See the\n     * [Location type declaration](#/classes/RouterLocation)\n     * for more details.\n     *\n     * @public\n     * @type {!RouterLocation}\n     */\n    this.location;\n    this.location = createLocation({resolver: this});\n\n    this.__lastStartedRenderId = 0;\n    this.__navigationEventHandler = this.__onNavigationEvent.bind(this);\n    this.setOutlet(outlet);\n    this.subscribe();\n    // Using WeakMap instead of WeakSet because WeakSet is not supported by IE11\n    this.__createdByRouter = new WeakMap();\n    this.__addedByRouter = new WeakMap();\n  }\n\n  __resolveRoute(context) {\n    const route = context.route;\n\n    let callbacks = Promise.resolve();\n\n    if (isFunction(route.children)) {\n      callbacks = callbacks\n        .then(() => route.children(copyContextWithoutNext(context)))\n        .then(children => {\n          // The route.children() callback might have re-written the\n          // route.children property instead of returning a value\n          if (!isResultNotEmpty(children) && !isFunction(route.children)) {\n            children = route.children;\n          }\n          processNewChildren(children, route);\n        });\n    }\n\n    const commands = {\n      redirect: path => createRedirect(context, path),\n      component: (component) => {\n        const element = document.createElement(component);\n        this.__createdByRouter.set(element, true);\n        return element;\n      }\n    };\n\n    return callbacks\n      .then(() => {\n        if (this.__isLatestRender(context)) {\n          return runCallbackIfPossible(route.action, [context, commands], route);\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          // Actions like `() => import('my-view.js')` are not expected to\n          // end the resolution, despite the result is not empty. Checking\n          // the result with a whitelist of values that end the resolution.\n          if (result instanceof HTMLElement ||\n              result.redirect ||\n              result === notFoundResult) {\n            return result;\n          }\n        }\n\n        if (isString(route.redirect)) {\n          return commands.redirect(route.redirect);\n        }\n\n        if (route.bundle) {\n          return loadBundle(route.bundle)\n            .then(() => {}, () => {\n              throw new Error(log(`Bundle not found: ${route.bundle}. Check if the file name is correct`));\n            });\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          return result;\n        }\n        if (isString(route.component)) {\n          return commands.component(route.component);\n        }\n      });\n  }\n\n  /**\n   * Sets the router outlet (the DOM node where the content for the current\n   * route is inserted). Any content pre-existing in the router outlet is\n   * removed at the end of each render pass.\n   *\n   * NOTE: this method is automatically invoked first time when creating a new Router instance.\n   *\n   * @param {?Node} outlet the DOM node where the content for the current route\n   *     is inserted.\n   */\n  setOutlet(outlet) {\n    if (outlet) {\n      this.__ensureOutlet(outlet);\n    }\n    this.__outlet = outlet;\n  }\n\n  /**\n   * Returns the current router outlet. The initial value is `undefined`.\n   *\n   * @return {?Node} the current router outlet (or `undefined`)\n   */\n  getOutlet() {\n    return this.__outlet;\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one) and triggers a\n   * navigation event so that the router outlet is refreshed according to the\n   * current `window.location` and the new routing config.\n   *\n   * Each route object may have the following properties, listed here in the processing order:\n   * * `path` – the route path (relative to the parent route if any) in the\n   * [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   *\n   * * `children` – an array of nested routes or a function that provides this\n   * array at the render time. The function can be synchronous or asynchronous:\n   * in the latter case the render is delayed until the returned promise is\n   * resolved. The `children` function is executed every time when this route is\n   * being rendered. This allows for dynamic route structures (e.g. backend-defined),\n   * but it might have a performance impact as well. In order to avoid calling\n   * the function on subsequent renders, you can override the `children` property\n   * of the route object and save the calculated array there\n   * (via `context.route.children = [ route1, route2, ...];`).\n   * Parent routes are fully resolved before resolving the children. Children\n   * 'path' values are relative to the parent ones.\n   *\n   * * `action` – the action that is executed before the route is resolved.\n   * The value for this property should be a function, accepting `context`\n   * and `commands` parameters described below. If present, this function is\n   * always invoked first, disregarding of the other properties' presence.\n   * The action can return a result directly or within a `Promise`, which\n   * resolves to the result. If the action result is an `HTMLElement` instance,\n   * a `commands.component(name)` result, a `commands.redirect(path)` result,\n   * or a `context.next()` result, the current route resolution is finished,\n   * and other route config properties are ignored.\n   * See also **Route Actions** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `redirect` – other route's path to redirect to. Passes all route parameters to the redirect target.\n   * The target route should also be defined.\n   * See also **Redirects** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `bundle` – string containing the path to `.js` or `.mjs` bundle to load before resolving the route,\n   * or the object with \"module\" and \"nomodule\" keys referring to different bundles.\n   * Each bundle is only loaded once. If \"module\" and \"nomodule\" are set, only one bundle is loaded,\n   * depending on whether the browser supports ES modules or not.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * Any error, e.g. 404 while loading bundle will cause route resolution to throw.\n   * See also **Code Splitting** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `component` – the tag name of the Web Component to resolve the route to.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * If route contains the `component` property (or an action that return a component)\n   * and its child route also contains the `component` property, child route's component\n   * will be rendered as a light dom child of a parent component.\n   *\n   * * `name` – the string name of the route to use in the\n   * [`router.urlForName(name, params)`](#/classes/Router#method-urlForName)\n   * navigation helper method.\n   *\n   * For any route function (`action`, `children`) defined, the corresponding `route` object is available inside the callback\n   * through the `this` reference. If you need to access it, make sure you define the callback as a non-arrow function\n   * because arrow functions do not have their own `this` reference.\n   *\n   * `context` object that is passed to `action` function holds the following properties:\n   * * `context.pathname` – string with the pathname being resolved\n   *\n   * * `context.search` – search query string\n   *\n   * * `context.hash` – hash string\n   *\n   * * `context.params` – object with route parameters\n   *\n   * * `context.route` – object that holds the route that is currently being rendered.\n   *\n   * * `context.next()` – function for asynchronously getting the next route\n   * contents from the resolution chain (if any)\n   *\n   * `commands` object that is passed to `action` function has\n   * the following methods:\n   *\n   * * `commands.redirect(path)` – function that creates a redirect data\n   * for the path specified.\n   *\n   * * `commands.component(component)` – function that creates a new HTMLElement\n   * with current context. Note: the component created by this function is reused if visiting the same path twice in row.\n   *\n   *\n   * @param {!Array<!Route>|!Route} routes a single route or an array of those\n   * @param {?boolean} skipRender configure the router but skip rendering the\n   *     route corresponding to the current `window.location` values\n   *\n   * @return {!Promise<!Node>}\n   */\n  setRoutes(routes, skipRender = false) {\n    this.__previousContext = undefined;\n    this.__urlForName = undefined;\n    super.setRoutes(routes);\n    if (!skipRender) {\n      this.__onNavigationEvent();\n    }\n    return this.ready;\n  }\n\n  /**\n   * Asynchronously resolves the given pathname and renders the resolved route\n   * component into the router outlet. If no router outlet is set at the time of\n   * calling this method, or at the time when the route resolution is completed,\n   * a `TypeError` is thrown.\n   *\n   * Returns a promise that is fulfilled with the router outlet DOM Node after\n   * the route component is created and inserted into the router outlet, or\n   * rejected if no route matches the given path.\n   *\n   * If another render pass is started before the previous one is completed, the\n   * result of the previous render pass is ignored.\n   *\n   * @param {!string|!{pathname: !string, search: ?string, hash: ?string}} pathnameOrContext\n   *    the pathname to render or a context object with a `pathname` property,\n   *    optional `search` and `hash` properties, and other properties\n   *    to pass to the resolver.\n   * @param {boolean=} shouldUpdateHistory\n   *    update browser history with the rendered location\n   * @return {!Promise<!Node>}\n   */\n  render(pathnameOrContext, shouldUpdateHistory) {\n    const renderId = ++this.__lastStartedRenderId;\n    const context = Object.assign(\n      {\n        search: '',\n        hash: ''\n      },\n      isString(pathnameOrContext)\n        ? {pathname: pathnameOrContext}\n        : pathnameOrContext,\n      {\n        __renderId: renderId\n      }\n    );\n\n    // Find the first route that resolves to a non-empty result\n    this.ready = this.resolve(context)\n\n      // Process the result of this.resolve() and handle all special commands:\n      // (redirect / prevent / component). If the result is a 'component',\n      // then go deeper and build the entire chain of nested components matching\n      // the pathname. Also call all 'on before' callbacks along the way.\n      .then(context => this.__fullyResolveChain(context))\n\n      .then(context => {\n        if (this.__isLatestRender(context)) {\n          const previousContext = this.__previousContext;\n\n          // Check if the render was prevented and make an early return in that case\n          if (context === previousContext) {\n            // Replace the history with the previous context\n            // to make sure the URL stays the same.\n            this.__updateBrowserHistory(previousContext, true);\n            return this.location;\n          }\n\n          this.location = createLocation(context);\n\n          if (shouldUpdateHistory) {\n            // Replace only if first render redirects, so that we don’t leave\n            // the redirecting record in the history\n            this.__updateBrowserHistory(context, renderId === 1);\n          }\n\n          fireRouterEvent('location-changed', {router: this, location: this.location});\n\n          // Skip detaching/re-attaching there are no render changes\n          if (context.__skipAttach) {\n            this.__copyUnchangedElements(context, previousContext);\n            this.__previousContext = context;\n            return this.location;\n          }\n\n          this.__addAppearingContent(context, previousContext);\n          const animationDone = this.__animateIfNeeded(context);\n\n          this.__runOnAfterEnterCallbacks(context);\n          this.__runOnAfterLeaveCallbacks(context, previousContext);\n\n          return animationDone.then(() => {\n            if (this.__isLatestRender(context)) {\n              // If there is another render pass started after this one,\n              // the 'disappearing content' would be removed when the other\n              // render pass calls `this.__addAppearingContent()`\n              this.__removeDisappearingContent();\n\n              this.__previousContext = context;\n              return this.location;\n            }\n          });\n        }\n      })\n      .catch(error => {\n        if (renderId === this.__lastStartedRenderId) {\n          if (shouldUpdateHistory) {\n            this.__updateBrowserHistory(context);\n          }\n          removeDomNodes(this.__outlet && this.__outlet.children);\n          this.location = createLocation(Object.assign(context, {resolver: this}));\n          fireRouterEvent('error', Object.assign({router: this, error}, context));\n          throw error;\n        }\n      });\n    return this.ready;\n  }\n\n  // `topOfTheChainContextBeforeRedirects` is a context coming from Resolver.resolve().\n  // It would contain a 'redirect' route or the first 'component' route that\n  // matched the pathname. There might be more child 'component' routes to be\n  // resolved and added into the chain. This method would find and add them.\n  // `contextBeforeRedirects` is the context containing such a child component\n  // route. It's only necessary when this method is called recursively (otherwise\n  // it's the same as the 'top of the chain' context).\n  //\n  // Apart from building the chain of child components, this method would also\n  // handle 'redirect' routes, call 'onBefore' callbacks and handle 'prevent'\n  // and 'redirect' callback results.\n  __fullyResolveChain(topOfTheChainContextBeforeRedirects,\n    contextBeforeRedirects = topOfTheChainContextBeforeRedirects) {\n    return this.__findComponentContextAfterAllRedirects(contextBeforeRedirects)\n      // `contextAfterRedirects` is always a context with an `HTMLElement` result\n      // In other cases the promise gets rejected and .then() is not called\n      .then(contextAfterRedirects => {\n        const redirectsHappened = contextAfterRedirects !== contextBeforeRedirects;\n        const topOfTheChainContextAfterRedirects =\n          redirectsHappened ? contextAfterRedirects : topOfTheChainContextBeforeRedirects;\n\n        const matchedPath = getPathnameForRouter(\n          getMatchedPath(contextAfterRedirects.chain),\n          contextAfterRedirects.resolver\n        );\n        const isFound = (matchedPath === contextAfterRedirects.pathname);\n\n        // Recursive method to try matching more child and sibling routes\n        const findNextContextIfAny = (context, parent = context.route, prevResult) => {\n          return context.next(undefined, parent, prevResult).then(nextContext => {\n            if (nextContext === null || nextContext === notFoundResult) {\n              // Next context is not found in children, ...\n              if (isFound) {\n                // ...but original context is already fully matching - use it\n                return context;\n              } else if (parent.parent !== null) {\n                // ...and there is no full match yet - step up to check siblings\n                return findNextContextIfAny(context, parent.parent, nextContext);\n              } else {\n                return nextContext;\n              }\n            }\n\n            return nextContext;\n          });\n        };\n\n        return findNextContextIfAny(contextAfterRedirects).then(nextContext => {\n          if (nextContext === null || nextContext === notFoundResult) {\n            throw getNotFoundError(topOfTheChainContextAfterRedirects);\n          }\n\n          return nextContext\n          && nextContext !== notFoundResult\n          && nextContext !== contextAfterRedirects\n            ? this.__fullyResolveChain(topOfTheChainContextAfterRedirects, nextContext)\n            : this.__amendWithOnBeforeCallbacks(contextAfterRedirects);\n        });\n      });\n  }\n\n  __findComponentContextAfterAllRedirects(context) {\n    const result = context.result;\n    if (result instanceof HTMLElement) {\n      renderElement(context, result);\n      return Promise.resolve(context);\n    } else if (result.redirect) {\n      return this.__redirect(result.redirect, context.__redirectCount, context.__renderId)\n        .then(context => this.__findComponentContextAfterAllRedirects(context));\n    } else if (result instanceof Error) {\n      return Promise.reject(result);\n    } else {\n      return Promise.reject(\n        new Error(\n          log(\n            `Invalid route resolution result for path \"${context.pathname}\". ` +\n            `Expected redirect object or HTML element, but got: \"${logValue(result)}\". ` +\n            `Double check the action return value for the route.`\n          )\n        ));\n    }\n  }\n\n  __amendWithOnBeforeCallbacks(contextWithFullChain) {\n    return this.__runOnBeforeCallbacks(contextWithFullChain).then(amendedContext => {\n      if (amendedContext === this.__previousContext || amendedContext === contextWithFullChain) {\n        return amendedContext;\n      }\n      return this.__fullyResolveChain(amendedContext);\n    });\n  }\n\n  __runOnBeforeCallbacks(newContext) {\n    const previousContext = this.__previousContext || {};\n    const previousChain = previousContext.chain || [];\n    const newChain = newContext.chain;\n\n    let callbacks = Promise.resolve();\n    const prevent = () => ({cancel: true});\n    const redirect = (pathname) => createRedirect(newContext, pathname);\n\n    newContext.__divergedChainIndex = 0;\n    newContext.__skipAttach = false;\n    if (previousChain.length) {\n      for (let i = 0; i < Math.min(previousChain.length, newChain.length); i = ++newContext.__divergedChainIndex) {\n        if (previousChain[i].route !== newChain[i].route\n          || previousChain[i].path !== newChain[i].path && previousChain[i].element !== newChain[i].element\n          || !this.__isReusableElement(previousChain[i].element, newChain[i].element)) {\n          break;\n        }\n      }\n\n      // Skip re-attaching and notifications if element and chain do not change\n      newContext.__skipAttach =\n        // Same route chain\n        newChain.length === previousChain.length && newContext.__divergedChainIndex == newChain.length &&\n        // Same element\n        this.__isReusableElement(newContext.result, previousContext.result);\n\n      if (newContext.__skipAttach) {\n        // execute onBeforeLeave for changed segment element when skipping attach\n        for (let i = newChain.length - 1; i >= 0; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n        // execute onBeforeEnter for changed segment element when skipping attach\n        for (let i = 0; i < newChain.length; i++) {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n        }\n\n      } else {\n        // execute onBeforeLeave when NOT skipping attach\n        for (let i = previousChain.length - 1; i >= newContext.__divergedChainIndex; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n      }\n    }\n    // execute onBeforeEnter when NOT skipping attach\n    if (!newContext.__skipAttach) {\n      for (let i = 0; i < newChain.length; i++) {\n        if (i < newContext.__divergedChainIndex) {\n          if (i < previousChain.length && previousChain[i].element) {\n            previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n          }\n        } else {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          if (newChain[i].element) {\n            newChain[i].element.location = createLocation(newContext, newChain[i].route);\n          }\n        }\n      }\n    }\n    return callbacks.then(amendmentResult => {\n      if (amendmentResult) {\n        if (amendmentResult.cancel) {\n          this.__previousContext.__renderId = newContext.__renderId;\n          return this.__previousContext;\n        }\n        if (amendmentResult.redirect) {\n          return this.__redirect(amendmentResult.redirect, newContext.__redirectCount, newContext.__renderId);\n        }\n      }\n      return newContext;\n    });\n  }\n\n  __runOnBeforeLeaveCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const afterLeaveFunction = amend('onBeforeLeave', [location, commands, this], chainElement.element);\n        return afterLeaveFunction(result);\n      }\n    }).then(result => {\n      if (!(result || {}).redirect) {\n        return result;\n      }\n    });\n  }\n\n  __runOnBeforeEnterCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext, chainElement.route);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const beforeEnterFunction = amend('onBeforeEnter', [location, commands, this], chainElement.element);\n        return beforeEnterFunction(result);\n      }\n    });\n  }\n\n  __isReusableElement(element, otherElement) {\n    if (element && otherElement) {\n      return this.__createdByRouter.get(element) && this.__createdByRouter.get(otherElement)\n        ? element.localName === otherElement.localName\n        : element === otherElement;\n    }\n    return false;\n  }\n\n  __isLatestRender(context) {\n    return context.__renderId === this.__lastStartedRenderId;\n  }\n\n  __redirect(redirectData, counter, renderId) {\n    if (counter > MAX_REDIRECT_COUNT) {\n      throw new Error(log(`Too many redirects when rendering ${redirectData.from}`));\n    }\n\n    return this.resolve({\n      pathname: this.urlForPath(\n        redirectData.pathname,\n        redirectData.params\n      ),\n      redirectFrom: redirectData.from,\n      __redirectCount: (counter || 0) + 1,\n      __renderId: renderId\n    });\n  }\n\n  __ensureOutlet(outlet = this.__outlet) {\n    if (!(outlet instanceof Node)) {\n      throw new TypeError(log(`Expected router outlet to be a valid DOM Node (but got ${outlet})`));\n    }\n  }\n\n  __updateBrowserHistory({pathname, search = '', hash = ''}, replace) {\n    if (window.location.pathname !== pathname\n        || window.location.search !== search\n        || window.location.hash !== hash\n    ) {\n      const changeState = replace ? 'replaceState' : 'pushState';\n      window.history[changeState](null, document.title, pathname + search + hash);\n      window.dispatchEvent(new PopStateEvent('popstate', {state: 'vaadin-router-ignore'}));\n    }\n  }\n\n  __copyUnchangedElements(context, previousContext) {\n    // Find the deepest common parent between the last and the new component\n    // chains. Update references for the unchanged elements in the new chain\n    let deepestCommonParent = this.__outlet;\n    for (let i = 0; i < context.__divergedChainIndex; i++) {\n      const unchangedElement = previousContext && previousContext.chain[i].element;\n      if (unchangedElement) {\n        if (unchangedElement.parentNode === deepestCommonParent) {\n          context.chain[i].element = unchangedElement;\n          deepestCommonParent = unchangedElement;\n        } else {\n          break;\n        }\n      }\n    }\n    return deepestCommonParent;\n  }\n\n  __addAppearingContent(context, previousContext) {\n    this.__ensureOutlet();\n\n    // If the previous 'entering' animation has not completed yet,\n    // stop it and remove that content from the DOM before adding new one.\n    this.__removeAppearingContent();\n\n    // Copy reusable elements from the previousContext to current\n    const deepestCommonParent = this.__copyUnchangedElements(context, previousContext);\n\n    // Keep two lists of DOM elements:\n    //  - those that should be removed once the transition animation is over\n    //  - and those that should remain\n    this.__appearingContent = [];\n    this.__disappearingContent = Array\n      .from(deepestCommonParent.children)\n      .filter(\n        // Only remove layout content that was added by router\n        e => this.__addedByRouter.get(e) &&\n        // Do not remove the result element to avoid flickering\n        e !== context.result);\n\n    // Add new elements (starting after the deepest common parent) to the DOM.\n    // That way only the components that are actually different between the two\n    // locations are added to the DOM (and those that are common remain in the\n    // DOM without first removing and then adding them again).\n    let parentElement = deepestCommonParent;\n    for (let i = context.__divergedChainIndex; i < context.chain.length; i++) {\n      const elementToAdd = context.chain[i].element;\n      if (elementToAdd) {\n        parentElement.appendChild(elementToAdd);\n        this.__addedByRouter.set(elementToAdd, true);\n        if (parentElement === deepestCommonParent) {\n          this.__appearingContent.push(elementToAdd);\n        }\n        parentElement = elementToAdd;\n      }\n    }\n  }\n\n  __removeDisappearingContent() {\n    if (this.__disappearingContent) {\n      removeDomNodes(this.__disappearingContent);\n    }\n    this.__disappearingContent = null;\n    this.__appearingContent = null;\n  }\n\n  __removeAppearingContent() {\n    if (this.__disappearingContent && this.__appearingContent) {\n      removeDomNodes(this.__appearingContent);\n      this.__disappearingContent = null;\n      this.__appearingContent = null;\n    }\n  }\n\n  __runOnAfterLeaveCallbacks(currentContext, targetContext) {\n    if (!targetContext) {\n      return;\n    }\n\n    // REVERSE iteration: from Z to A\n    for (let i = targetContext.chain.length - 1; i >= currentContext.__divergedChainIndex; i--) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = targetContext.chain[i].element;\n      if (!currentComponent) {\n        continue;\n      }\n      try {\n        const location = createLocation(currentContext);\n        runCallbackIfPossible(\n          currentComponent.onAfterLeave,\n          [location, {}, targetContext.resolver],\n          currentComponent);\n      } finally {\n        if (this.__disappearingContent.indexOf(currentComponent) > -1) {\n          removeDomNodes(currentComponent.children);\n        }\n      }\n    }\n  }\n\n  __runOnAfterEnterCallbacks(currentContext) {\n    // forward iteration: from A to Z\n    for (let i = currentContext.__divergedChainIndex; i < currentContext.chain.length; i++) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = currentContext.chain[i].element || {};\n      const location = createLocation(currentContext, currentContext.chain[i].route);\n      runCallbackIfPossible(\n        currentComponent.onAfterEnter,\n        [location, {}, currentContext.resolver],\n        currentComponent);\n    }\n  }\n\n  __animateIfNeeded(context) {\n    const from = (this.__disappearingContent || [])[0];\n    const to = (this.__appearingContent || [])[0];\n    const promises = [];\n\n    const chain = context.chain;\n    let config;\n    for (let i = chain.length; i > 0; i--) {\n      if (chain[i - 1].route.animate) {\n        config = chain[i - 1].route.animate;\n        break;\n      }\n    }\n\n    if (from && to && config) {\n      const leave = isObject(config) && config.leave || 'leaving';\n      const enter = isObject(config) && config.enter || 'entering';\n      promises.push(animate(from, leave));\n      promises.push(animate(to, enter));\n    }\n\n    return Promise.all(promises).then(() => context);\n  }\n\n  /**\n   * Subscribes this instance to navigation events on the `window`.\n   *\n   * NOTE: beware of resource leaks. For as long as a router instance is\n   * subscribed to navigation events, it won't be garbage collected.\n   */\n  subscribe() {\n    window.addEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  /**\n   * Removes the subscription to navigation events created in the `subscribe()`\n   * method.\n   */\n  unsubscribe() {\n    window.removeEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  __onNavigationEvent(event) {\n    const {pathname, search, hash} = event ? event.detail : window.location;\n    if (isString(this.__normalizePathname(pathname))) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      this.render({pathname, search, hash}, true);\n    }\n  }\n\n  /**\n   * Configures what triggers Router navigation events:\n   *  - `POPSTATE`: popstate events on the current `window`\n   *  - `CLICK`: click events on `<a>` links leading to the current page\n   *\n   * This method is invoked with the pre-configured values when creating a new Router instance.\n   * By default, both `POPSTATE` and `CLICK` are enabled. This setup is expected to cover most of the use cases.\n   *\n   * See the `router-config.js` for the default navigation triggers config. Based on it, you can\n   * create the own one and only import the triggers you need, instead of pulling in all the code,\n   * e.g. if you want to handle `click` differently.\n   *\n   * See also **Navigation Triggers** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * @param {...NavigationTrigger} triggers\n   */\n  static setTriggers(...triggers) {\n    setNavigationTriggers(triggers);\n  }\n\n  /**\n   * Generates a URL for the route with the given name, optionally performing\n   * substitution of parameters.\n   *\n   * The route is searched in all the Router instances subscribed to\n   * navigation events.\n   *\n   * **Note:** For child route names, only array children are considered.\n   * It is not possible to generate URLs using a name for routes set with\n   * a children function.\n   *\n   * @function urlForName\n   * @param {!string} name the route name or the route’s `component` name.\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForName(name, params) {\n    if (!this.__urlForName) {\n      this.__urlForName = generateUrls(this);\n    }\n    return getPathnameForRouter(\n      this.__urlForName(name, params),\n      this\n    );\n  }\n\n  /**\n   * Generates a URL for the given route path, optionally performing\n   * substitution of parameters.\n   *\n   * @param {!string} path string route path declared in [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForPath(path, params) {\n    return getPathnameForRouter(\n      Router.pathToRegexp.compile(path)(params),\n      this\n    );\n  }\n\n  /**\n   * Triggers navigation to a new path. Returns a boolean without waiting until\n   * the navigation is complete. Returns `true` if at least one `Router`\n   * has handled the navigation (was subscribed and had `baseUrl` matching\n   * the `path` argument), otherwise returns `false`.\n   *\n   * @param {!string|!{pathname: !string, search: (string|undefined), hash: (string|undefined)}} path\n   *   a new in-app path string, or an URL-like object with `pathname`\n   *   string property, and optional `search` and `hash` string properties.\n   * @return {boolean}\n   */\n  static go(path) {\n    const {pathname, search, hash} = isString(path)\n      ? this.__createUrl(path, 'http://a') // some base to omit origin\n      : path;\n    return fireRouterEvent('go', {pathname, search, hash});\n  }\n}\n\nconst DEV_MODE_CODE_REGEXP =\n  /\\/\\*\\*\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients)\n      .map(key => FlowClients[key])\n      .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e);\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nconst runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n\n/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.\n      // Check all locations calling the method getEntries() in\n      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106\n      // Currently it is only used by BootstrapHandler.\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return true;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.1.0';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nconst usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n\nwindow.Vaadin = window.Vaadin || {};\nwindow.Vaadin.registrations = window.Vaadin.registrations || [];\n\nwindow.Vaadin.registrations.push({\n  is: '@vaadin/router',\n  version: '1.7.4',\n});\n\nusageStatistics();\n\nRouter.NavigationTrigger = {POPSTATE, CLICK};\n\nexport { Resolver, Router };\n//# sourceMappingURL=vaadin-router.js.map\n","import { LitElement, html, css } from \"lit-element\";\n\nclass HeaderView extends LitElement {\n    static get styles() {\n        return css``;\n    }\n\n    render() {\n        return html`\n            <a href=\"${document.baseURI}\">Home</a>\n            <a href=\"${document.baseURI}about\">About</a>\n        `;\n    }\n}\n\ncustomElements.define('header-view', HeaderView);","import './views/home/HomeView';\nimport './views/about/AboutView';\nimport './views/header/HeaderView';\n\nimport { Router } from '@vaadin/router';\n\nconst router = new Router(document.querySelector('main'));\nrouter.setRoutes([\n    {\n        path: '/',\n        component: 'home-view'\n    },\n    {\n        path: '/about',\n        component: 'about-view'\n    }\n])"],"names":["isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","constructor","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","directives","WeakMap","isDirective","o","noChange","nothing","TemplateInstance","processor","options","__parts","update","setValue","commit","_clone","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","getHTML","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","getTemplateElement","createElement","value","innerHTML","isPrimitive","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","_getValue","v","text","t","setAttribute","committer","directive","NodePart","__pendingValue","appendInto","startNode","appendChild","endNode","ref","appendIntoPart","__insert","insertAfterPart","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","itemParts","itemPart","item","BooleanAttributePart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","defaultTemplateProcessor","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","toAttribute","Boolean","Object","JSON","stringify","fromAttribute","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","finalized","UpdatingElement","HTMLElement","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","_ensureClassProperties","hasOwnProperty","superProperties","getPrototypeOf","k","createProperty","noAccessor","prototype","descriptor","getPropertyDescriptor","defineProperty","oldValue","requestUpdateInternal","configurable","enumerable","getPropertyOptions","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","_valueHasChanged","_propertyValueFromAttribute","_propertyValueToAttribute","_updateState","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","_v","_instanceProperties","_applyInstanceProperties","connectedCallback","enableUpdating","disconnectedCallback","attributeChangedCallback","_attributeToProperty","_propertyToAttribute","ctor","attrValue","propName","shouldRequestUpdate","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","requestUpdate","updateComplete","performUpdate","hasUpdated","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","getUpdateComplete","size","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","toString","css","reduce","acc","idx","textFromCSSResult","renderNotImplemented","LitElement","getStyles","_getUniqueStyles","userStyles","addStyles","reduceRight","unshift","_styles","map","cssRules","rule","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","shadowRootOptions","adoptedStyleSheets","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","assign","litRender","delete","mode","define","toArray","objectOrArray","log","msg","baseURI","MODULE","NOMODULE","bundleKeys","ensureBundle","src","ensureRoute","route","isString","path","bundle","stringKeys","isFunction","action","children","isObject","some","redirect","overriddenProp","ensureRoutes","routes","loadScript","script","head","async","resolve","reject","onreadystatechange","onload","__dynamicImportLoaded","onerror","fireRouterEvent","detail","dispatchEvent","CustomEvent","cancelable","f","getNotFoundError","context","error","pathname","code","notFoundResult","vaadinRouterGlobalClickHandler","defaultPrevented","button","shiftKey","ctrlKey","altKey","metaKey","anchor","target","composedPath","hasAttribute","location","hash","origin","port","protocol","hostname","getAnchorOrigin","search","preventDefault","scrollTo","CLICK","activate","inactivate","vaadinRouterGlobalPopstateHandler","state","test","navigator","userAgent","PopStateEvent","inType","params","createEvent","initEvent","bubbles","Event","POPSTATE","pathToRegexp_1","pathToRegexp","parse_1","compile_1","tokensToFunction","tokensToFunction_1","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","tokens","defaultDelimiter","delimiter","delimiters","pathEscaped","m","escaped","offset","prev","next","group","modifier","partial","repeat","optional","pattern","escapeGroup","escapeString","matches","encode","encodeURIComponent","token","segment","TypeError","j","replace","flags","sensitive","keys","strict","concat","isEndDelimited","groups","source","regexpToRegexp","arrayToRegexp","stringToRegexp","compile","cache","decodeParam","val","decodeURIComponent","err","matchRoute","ignoreLeadingSlash","parentKeys","parentParams","childMatches","childIndex","routepath","charAt","routeToSkip","done","__children","exact","regexp","matchPath","childRoute","matchedLength","childMatch","resolveRoute","Resolver","baseUrl","errorHandler","resolver","root","__synthetic","getRoutes","setRoutes","newRoutes","addRoutes","removeRoutes","pathnameOrContext","__normalizePathname","nextMatches","currentContext","resume","prevResult","parentRoute","isChildRoute","chain","updateChainForRoute","then","resolution","catch","errorMessage","routePath","generateErrorMessage","DOMException","__createUrl","url","base","URL","__effectiveBaseUrl","href","normalizedUrl","pathToRegexp$1","cache$1","cacheRoutes","routesByName","component","getRouteByName","routeName","getRoutePath","generateUrls","router","fullPath","rt","toPath","create","stringifyQueryParams","queryParams","query","triggers","setNavigationTriggers","newTriggers","trigger","animate","elem","className","classList","getComputedStyle","getPropertyValue","willAnimate","rect","getBoundingClientRect","bottom","top","right","left","cb","listener","waitForAnimation","remove","isResultNotEmpty","createLocation","redirectFrom","getUrl","userParams","getPathnameForRouter","Router","getMatchedPath","createRedirect","runCallbackIfPossible","callback","args","thisArg","apply","amend","amendmentFunction","amendmentResult","cancel","removeDomNodes","nodes","a","b","outlet","baseElement","baseHref","__resolveRoute","NavigationTrigger","setTriggers","ready","__lastStartedRenderId","__navigationEventHandler","__onNavigationEvent","bind","setOutlet","subscribe","__createdByRouter","__addedByRouter","callbacks","copy","copyContextWithoutNext","newChildren","childRoutes","processNewChildren","commands","__isLatestRender","race","filter","__ensureOutlet","__outlet","getOutlet","skipRender","__previousContext","__urlForName","shouldUpdateHistory","renderId","__renderId","__fullyResolveChain","previousContext","__updateBrowserHistory","__skipAttach","__copyUnchangedElements","__addAppearingContent","animationDone","__animateIfNeeded","__runOnAfterEnterCallbacks","__runOnAfterLeaveCallbacks","__removeDisappearingContent","topOfTheChainContextBeforeRedirects","contextBeforeRedirects","__findComponentContextAfterAllRedirects","contextAfterRedirects","topOfTheChainContextAfterRedirects","isFound","findNextContextIfAny","nextContext","__amendWithOnBeforeCallbacks","renderElement","__redirect","__redirectCount","stringType","logValue","contextWithFullChain","__runOnBeforeCallbacks","amendedContext","newContext","previousChain","newChain","prevent","__divergedChainIndex","min","__isReusableElement","__runOnBeforeLeaveCallbacks","__runOnBeforeEnterCallbacks","chainElement","afterLeaveFunction","beforeEnterFunction","otherElement","redirectData","counter","urlForPath","changeState","history","title","deepestCommonParent","unchangedElement","__removeAppearingContent","__appearingContent","__disappearingContent","parentElement","elementToAdd","targetContext","currentComponent","onAfterLeave","onAfterEnter","to","promises","config","leave","enter","all","unsubscribe","urlForName","go","DEV_MODE_CODE_REGEXP","FlowClients","Vaadin","Flow","clients","uncommentAndRun","Function","runIfDevelopmentMode","developmentMode","maybeGatherAndSendStats","localStorage","getItem","client","productionMode","isDevelopmentMode","registrations","is","version"],"mappings":"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"}